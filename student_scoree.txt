{
  "Automate Login Process": {
    "prefix": "to automate the login process on a specific web page.",
    "body": [
      "from selenium import webdriver",
      "from selenium.webdriver.chrome.options import Options",
      "from selenium.webdriver.common.by import By",
      "from time import sleep",
      "",
      "options = Options()",
      "options.add_experimental_option(\"excludeSwitches\", [\"enable-logging\"])",
      "print(\"Testing started\")",
      "",
      "driver = webdriver.Chrome(options=options)",
      "driver.get(\"https://www.saucedemo.com/\")",
      "sleep(3)",
      "",
      "title = driver.title",
      "print(f\"Page title is {title}\")",
      "",
      "driver.find_element(By.ID, \"user-name\").send_keys(\"standard_user\")",
      "driver.find_element(By.ID, \"password\").send_keys(\"secret_sauce\")",
      "driver.find_element(By.ID, \"login-button\").click()",
      "sleep(3)",
      "",
      "first_item = driver.find_element(By.CLASS_NAME, \"inventory_item\")",
      "assert first_item.is_displayed(), \"First inventory item is not displayed\"",
      "first_item_name = first_item.find_element(By.CLASS_NAME, \"inventory_item_name\").text",
      "print(f\"First item name: {first_item_name}\")",
      "",
      "print(\"Test PASSED: Your LOGIN is successful and first inventory item is verified\")",
      "driver.quit()"
    ],
    "description": "Automates the login process on saucedemo.com and verifies success."
  },
  "Update 10 Student Records in Excel": {
    "prefix": "to update 10 student records in an Excel file.",
    "body": [
      "import os",
      "import openpyxl",
      "from selenium import webdriver",
      "from selenium.webdriver.common.by import By",
      "from selenium.common.exceptions import NoSuchElementException",
      "import time",
      "",
      "SCRIPT_DIR = os.path.dirname(os.path.abspath(__file__))",
      "EXCEL_PATH = os.path.join(SCRIPT_DIR, \"students.xlsx\")",
      "",
      "def create_initial_excel_file():",
      "    if not os.path.exists(EXCEL_PATH):",
      "        print(f\"'{os.path.basename(EXCEL_PATH)}' not found. Creating a new file...\")",
      "        workbook = openpyxl.Workbook()",
      "        sheet = workbook.active",
      "        sheet.title = \"Student Grades\"",
      "        headers = [\"ID\", \"Student Name\", \"Grade\", \"Status\"]",
      "        sheet.append(headers)",
      "        for i in range(1, 11):",
      "            sheet.append([i, f\"Student {i}\", \"C\", \"Pending Update\"])",
      "        workbook.save(EXCEL_PATH)",
      "        print(\"Sample 'students.xlsx' created successfully.\")",
      "",
      "def main():",
      "    create_initial_excel_file()",
      "    try:",
      "        workbook = openpyxl.load_workbook(EXCEL_PATH)",
      "        sheet = workbook.active",
      "    except FileNotFoundError:",
      "        print(f\"Error: Could not find the Excel file at {EXCEL_PATH}\")",
      "        return",
      "",
      "    print(\"\\nInitializing WebDriver...\")",
      "    driver = webdriver.Chrome()",
      "    try:",
      "        driver.get(\"https://www.w3schools.com/html/html_tables.asp\")",
      "        driver.maximize_window()",
      "        time.sleep(2)",
      "",
      "        print(\"Extracting data from W3Schools table...\")",
      "        rows = driver.find_elements(By.XPATH, '//*[@id=\"customers\"]/tbody/tr')",
      "        web_data = []",
      "        for row in rows[1:]:",
      "            cells = row.find_elements(By.TAG_NAME, \"td\")",
      "            if len(cells) >= 2:",
      "                company = cells[0].text",
      "                contact = cells[1].text",
      "                web_data.append({'name': company, 'detail': contact})",
      "",
      "        student_count = min(10, len(web_data))",
      "        print(f\"Found {len(web_data)} records. Will update {student_count} records in Excel.\\n\")",
      "",
      "        for i in range(student_count):",
      "            excel_row_index = i + 2",
      "            data_to_update = web_data[i]",
      "            student_id = sheet.cell(row=excel_row_index, column=1).value",
      "            new_student_name = data_to_update['name']",
      "            new_grade = \"A+\"",
      "            new_status = f\"Updated with contact: {data_to_update['detail']}\"",
      "            sheet.cell(row=excel_row_index, column=2, value=new_student_name)",
      "            sheet.cell(row=excel_row_index, column=3, value=new_grade)",
      "            sheet.cell(row=excel_row_index, column=4, value=new_status)",
      "            print(f\"Record Updated: ID={student_id}, Name='{new_student_name}', Grade='{new_grade}'\")",
      "",
      "        workbook.save(EXCEL_PATH)",
      "        print(f\"\\nSuccessfully saved all updates to '{os.path.basename(EXCEL_PATH)}'.\")",
      "",
      "        print(\"\\nVerifying updated records in Excel:\")",
      "        for i in range(2, student_count + 2):",
      "            student_name = sheet.cell(row=i, column=2).value",
      "            status = sheet.cell(row=i, column=4).value",
      "            print(f\"Row {i-1}: Name='{student_name}', Status='{status}'\")",
      "",
      "    except NoSuchElementException:",
      "        print(\"Error: Could not find the required elements on the webpage.\")",
      "    except Exception as e:",
      "        print(f\"An unexpected error occurred: {e}\")",
      "    finally:",
      "        driver.quit()",
      "        print(\"\\nData Manipulation and Verification Completed Successfully.\")",
      "",
      "if __name__ == \"__main__\":",
      "    main()"
    ],
    "description": "Updates 10 student records in an Excel file using data scraped from a website."
  },
  "student scoring above 60 table": {
    "prefix": "student scoring above 60 table",
    "body": [
      "from selenium import webdriver",
      "from selenium.webdriver.common.by import By",
      "import time",
      "import os",
      "",
      "# --- Step 1: Launch Browser ---",
      "driver = webdriver.Chrome()",
      "",
      "# Create an absolute path to your HTML file",
      "html_file_path = os.path.abspath('students.html')",
      "driver.get(f\"file:///{html_file_path}\")",
      "time.sleep(1)",
      "",
      "print(\"[Selenium] Student Marks Analysis Started...\\n\")",
      "",
      "# --- Step 2: Extract all rows except header ---",
      "rows = driver.find_elements(By.XPATH, \"//table//tr[position()>1]\")",
      "",
      "count_above_60 = 0",
      "",
      "# --- Step 3: Data Extraction & Analysis ---",
      "for row in rows:",
      "    cells = row.find_elements(By.TAG_NAME, \"td\")",
      "    if len(cells) == 5:",
      "        student_id = cells[0].text.strip()",
      "        name = cells[1].text.strip()",
      "        maths = int(cells[2].text.strip())",
      "        science = int(cells[3].text.strip())",
      "        english = int(cells[4].text.strip())",
      "        if maths > 60 or science > 60 or english > 60:",
      "            print(f\"Student {student_id} ({name}) scored above 60\")",
      "            count_above_60 += 1",
      "",
      "# --- Step 4: Summary Report ---",
      "print(f\"\\nTotal number of students who scored above 60: {count_above_60}\")",
      "",
      "# --- Step 5: Close Browser ---",
      "driver.quit()"
    ],
    "description": "Analyzes an HTML table of student grades to find how many scored over 60."
  },
  "Student Score Table HTML": {
    "prefix": "student score table html",
    "body": [
      "<html>",
      "<body>",
      "<table border=\"1\">",
      "  <tr><th>ID</th><th>Name</th><th>Maths</th><th>Science</th><th>English</th></tr>",
      "  <tr><td>1</td><td>Student 1</td><td>50</td><td>45</td><td>55</td></tr>",
      "  <tr><td>2</td><td>Student 2</td><td>70</td><td>40</td><td>55</td></tr>",
      "  <tr><td>3</td><td>Student 3</td><td>65</td><td>75</td><td>60</td></tr>",
      "  <tr><td>4</td><td>Student 4</td><td>40</td><td>50</td><td>45</td></tr>",
      "</table>",
      "</body>",
      "</html>"
    ],
    "description": "Creates a simple HTML table of student marks for Selenium automation testing."
  },
  "Count All Objects on a Web Page": {
    "prefix": "to provide the total number of objects present on a web page.",
    "body": [
      "from selenium import webdriver",
      "from selenium.webdriver.common.by import By",
      "import time",
      "",
      "driver = webdriver.Chrome()",
      "try:",
      "    driver.get(\"https://www.w3schools.com/\")",
      "    driver.maximize_window()",
      "    time.sleep(2)",
      "    elements = driver.find_elements(By.XPATH, \"//*\")",
      "    total_objects = len(elements)",
      "    print(f\"Total number of objects (HTML elements) on this page: {total_objects}\")",
      "finally:",
      "    driver.quit()"
    ],
    "description": "Counts every HTML element on a given webpage."
  },
  "Get Number of Items in a List or Combo Box": {
    "prefix": "to get the number of items in a list or combo box.",
    "body": [
      "from selenium import webdriver",
      "from selenium.webdriver.common.by import By",
      "from selenium.webdriver.support.ui import Select",
      "import time",
      "",
      "driver = webdriver.Chrome()",
      "try:",
      "    driver.get(\"https://www.w3schools.com/tags/tryit.asp?filename=tryhtml_select\")",
      "    time.sleep(2)",
      "    driver.switch_to.frame(\"iframeResult\")",
      "    dropdown_element = driver.find_element(By.TAG_NAME, \"select\")",
      "    select = Select(dropdown_element)",
      "    options = select.options",
      "    count = len(options)",
      "    print(\"Items available in the combo box:\")",
      "    for i, option in enumerate(options, 1):",
      "        print(f\"{i}. {option.text}\")",
      "    print(f\"\\nTotal number of items in the combo box: {count}\")",
      "finally:",
      "    driver.quit()"
    ],
    "description": "Counts the number of options in a dropdown/combo box on a webpage."
  }
}
